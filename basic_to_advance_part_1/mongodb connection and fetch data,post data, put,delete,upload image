// step 1 ..//    basic_to_advance\.env    // create .env file in this way and .env file  just have user name and password according to given below

myusername=kamal12
mypassword=knnnsjk

//step 2  //create file ..   // basic_to_advance\src\lib\databse\db_connection.js  // for connection.. db_connection.js file write code given below



const username = process.env.myusername
const password = process.env.mypassword


if(!username || !password){
    throw new error("Missing MongoDB Credentials")
}


export const connectionString = `mongodb+srv://${username}:${password}@cluster0.adea2.mongodb.net/employee?retryWrites=true&w=majority&appName=Cluster0`;


//step 3 // create file .. //    basic_to_advance\src\app\api\db-emp\route.js // in this route.js file give code in this way 


const username = process.env.myusername
const password = process.env.mypassword


if(!username || !password){
    throw new error("Missing MongoDB Credentials")
}


export const connectionString = `mongodb+srv://${username}:${password}@cluster0.adea2.mongodb.net/employee?retryWrites=true&w=majority&appName=Cluster0`; 
// here look at the employee ... employee is basically name of database.. if your database name is product then you should replace product insted of employee




//step 4  for fetching data  // create file //  basic_to_advance\src\lib\databse\model\employees.js  // now write code in employee.js file in this way

import { connectionString } from '../../../lib/databse/db_connection'
import mongoose from "mongoose"
import { NextResponse } from "next/server"

import Employee from '../../../lib/databse/model/employees'




export const GET = async()=>{
    await mongoose.connect(connectionString)

    const empData = await Employee.find();
    // return NextResponse.json({result: "success"})
    return NextResponse.json({result: empData})
} 




//step 5 save static data  in mongo db using post method by post man 
export const POST = async ()=>{
    await mongoose.connect(connectionString);
    const employeeData = new Employee({
        name:'Huzaifa',
        salary:'60k',
        department:'IT'
    })

    const response = await employeeData.save();
    return NextResponse.json({result:response})
} 


//step 6 save modifiable data  in mongo db using post method by post man 

export const GET = async()=>{
    await mongoose.connect(connectionString)

    const empData = await Employee.find();
    // return NextResponse.json({result: "success"})
    return NextResponse.json({result: empData})
} 


export const POST = async (req)=>{
    const payload = await req.json();
    await mongoose.connect(connectionString);
    const employeeData = new Employee(payload)

    const response = await employeeData.save();
    return NextResponse.json({result:response,success:true })
}  





//step 7 //upload data from browser (here check the data upload in console or not )  .. // basic_to_advance\src\app\mongo-add-emp\page.js -- folder structure

'use client'
import React, { useState } from 'react'


const AddEmployee = () => {




const [name,setName]=useState('');
const [salary,setSalary]=useState('');
const [department,setDepartment]=useState('');

const handleAddEmployee =  ()=>{
  console.log(name,salary,department)


}

  return (
    <>
         <h2>Add Employee Mongod DB with POST API in Next js</h2>
         <input type='text' value={name} onChange={(e) => setName(e.target.value)} placeholder='Enter Employee Name' /> <br/><br/><br/>


         

       
         <input type='text' value={salary} onChange={(e) => setSalary(e.target.value)} placeholder='Enter Employee salary' /><br/><br/><br/>


        
         <input type='text' value={department} onChange={(e) => setDepartment(e.target.value)} placeholder='Enter Department Name' /><br/><br/><br/>
 
          

          <button onClick={handleAddEmployee}> submit</button>


    </>
  )
}

export default AddEmployee




//step 8 //upload data from browser (here check the data upload in mongo db or not )  .. // basic_to_advance\src\app\mongo-add-emp\page.js -- folder structure

'use client'
import React, { useState } from 'react'


const AddEmployee = () => {




const [name,setName]=useState('');
const [salary,setSalary]=useState('');
const [department,setDepartment]=useState('');

const handleAddEmployee = async ()=>{
//   console.log(name,salary,department)
let data=await fetch('http://localhost:3000/api/db-emp', 
    { method:"POST",
        body:JSON.stringify({name,salary,department})
    })

    data =await data.json();
    if(data.success)
    {
        alert("Employee Added successfully")
        setName("");
        setSalary("");
        setDepartment("");
    }
    else{
        alert("Try again")
    }

}

  return (
    <>
         <h2>Add Employee Mongod DB with POST API in Next js</h2>
         <input type='text' value={name} onChange={(e) => setName(e.target.value)} placeholder='Enter Employee Name' /> <br/><br/><br/>


         

       
         <input type='text' value={salary} onChange={(e) => setSalary(e.target.value)} placeholder='Enter Employee salary' /><br/><br/><br/>


        
         <input type='text' value={department} onChange={(e) => setDepartment(e.target.value)} placeholder='Enter Department Name' /><br/><br/><br/>
 
          

          <button onClick={handleAddEmployee}> submit</button>


    </>
  )
}

export default AddEmployee


//step 8 .. fetch data from mongo db .. 

import Link from 'next/link'
import React from 'react'
const getData = async()=> {
    let data = await fetch('http://localhost:3000/api/db-emp');
    data = await data.json();
    if (data.success)
    {
        return data.result;
    }

    else
    {
        return false;
    }
  }


const GetEmployee = async() => {

const emp = await getData();


  return (

    <>
        <h2>Get Employee Data from Mongo DB</h2>
         
         <table border={2}>
            <thead>
                <tr>
                    <td>Name</td>
                    <td>Salary</td>
                    <td>Department</td>
                </tr>
            </thead>
            <tbody>
                {
                    emp.map((item,i)=>(
                        <tr key={i}>
                         <td>{item.name}</td>
                         <td>{item.salary}</td>
                         <td>{item.department}</td>
                        </tr>
                    ))
                }
            </tbody>
         </table>

        <Link href='/'>Back to Home</Link>
    </>
  )
}

export default GetEmployee





